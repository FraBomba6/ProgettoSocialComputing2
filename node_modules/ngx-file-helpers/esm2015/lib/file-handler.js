import { __awaiter, __decorate } from "tslib";
import { EventEmitter, Input, Output } from '@angular/core';
import { readFileAsync } from './helpers';
export class FileHandler {
    constructor() {
        this.filter = () => true;
        this.readStart = new EventEmitter();
        this.readEnd = new EventEmitter();
    }
    readFiles(files, onFileRead) {
        return __awaiter(this, void 0, void 0, function* () {
            const filteredFiles = Array.from(files).filter(this.filter);
            const fileCount = filteredFiles.length;
            this.readStart.emit(fileCount);
            yield Promise.all(filteredFiles.map((file) => __awaiter(this, void 0, void 0, function* () {
                const readFile = yield readFileAsync(file, this.readMode);
                onFileRead(readFile);
            })));
            this.readEnd.emit(fileCount);
        });
    }
}
__decorate([
    Input()
], FileHandler.prototype, "readMode", void 0);
__decorate([
    Input()
], FileHandler.prototype, "filter", void 0);
__decorate([
    Output()
], FileHandler.prototype, "readStart", void 0);
__decorate([
    Output()
], FileHandler.prototype, "readEnd", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWZpbGUtaGVscGVycy8iLCJzb3VyY2VzIjpbImxpYi9maWxlLWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBSTFDLE1BQU0sT0FBZ0IsV0FBVztJQUFqQztRQUtTLFdBQU0sR0FJRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFHbkIsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFHdkMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUFvQjlDLENBQUM7SUFsQmlCLFNBQVMsQ0FDdkIsS0FBZSxFQUNmLFVBQXdDOztZQUV4QyxNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFPLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDbEUsTUFBTSxTQUFTLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQztZQUV2QyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUUvQixNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQ2YsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFNLElBQUksRUFBQyxFQUFFO2dCQUM3QixNQUFNLFFBQVEsR0FBRyxNQUFNLGFBQWEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUMxRCxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDdkIsQ0FBQyxDQUFBLENBQUMsQ0FDSCxDQUFDO1lBRUYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDL0IsQ0FBQztLQUFBO0NBQ0Y7QUFqQ0M7SUFEQyxLQUFLLEVBQUU7NkNBQ2tCO0FBRzFCO0lBREMsS0FBSyxFQUFFOzJDQUtrQjtBQUcxQjtJQURDLE1BQU0sRUFBRTs4Q0FDcUM7QUFHOUM7SUFEQyxNQUFNLEVBQUU7NENBQ21DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IHJlYWRGaWxlQXN5bmMgfSBmcm9tICcuL2hlbHBlcnMnO1xyXG5pbXBvcnQgeyBSZWFkRmlsZSB9IGZyb20gJy4vcmVhZC1maWxlJztcclxuaW1wb3J0IHsgUmVhZE1vZGUgfSBmcm9tICcuL3JlYWQtbW9kZS5lbnVtJztcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGaWxlSGFuZGxlciB7XHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgcmVhZE1vZGU6IFJlYWRNb2RlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBmaWx0ZXI6IChcclxuICAgIGZpbGU6IEZpbGUsXHJcbiAgICBpbmRleDogbnVtYmVyLFxyXG4gICAgZmlsZXM6IEFycmF5PEZpbGU+XHJcbiAgKSA9PiBib29sZWFuID0gKCkgPT4gdHJ1ZTtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgcHVibGljIHJlYWRTdGFydCA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBwdWJsaWMgcmVhZEVuZCA9IG5ldyBFdmVudEVtaXR0ZXI8bnVtYmVyPigpO1xyXG5cclxuICBwcm90ZWN0ZWQgYXN5bmMgcmVhZEZpbGVzKFxyXG4gICAgZmlsZXM6IEZpbGVMaXN0LFxyXG4gICAgb25GaWxlUmVhZDogKGZpbGVSZWFkOiBSZWFkRmlsZSkgPT4gdm9pZFxyXG4gICk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgY29uc3QgZmlsdGVyZWRGaWxlcyA9IEFycmF5LmZyb208RmlsZT4oZmlsZXMpLmZpbHRlcih0aGlzLmZpbHRlcik7XHJcbiAgICBjb25zdCBmaWxlQ291bnQgPSBmaWx0ZXJlZEZpbGVzLmxlbmd0aDtcclxuXHJcbiAgICB0aGlzLnJlYWRTdGFydC5lbWl0KGZpbGVDb3VudCk7XHJcblxyXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgICAgIGZpbHRlcmVkRmlsZXMubWFwKGFzeW5jIGZpbGUgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlYWRGaWxlID0gYXdhaXQgcmVhZEZpbGVBc3luYyhmaWxlLCB0aGlzLnJlYWRNb2RlKTtcclxuICAgICAgICBvbkZpbGVSZWFkKHJlYWRGaWxlKTtcclxuICAgICAgfSlcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5yZWFkRW5kLmVtaXQoZmlsZUNvdW50KTtcclxuICB9XHJcbn1cclxuIl19