{"version":3,"file":"ngx-file-helpers.js","sources":["ng://ngx-file-helpers/lib/read-file-impl.ts","ng://ngx-file-helpers/lib/read-mode.enum.ts","ng://ngx-file-helpers/lib/helpers.ts","ng://ngx-file-helpers/lib/file-handler.ts","ng://ngx-file-helpers/lib/file-dropzone.directive.ts","ng://ngx-file-helpers/lib/file-picker.directive.ts","ng://ngx-file-helpers/lib/ngx-file-helpers.module.ts","ng://ngx-file-helpers/public-api.ts","ng://ngx-file-helpers/ngx-file-helpers.ts"],"sourcesContent":["import { ReadFile } from './read-file';\r\nimport { ReadMode } from './read-mode.enum';\r\n\r\nexport class ReadFileImpl implements ReadFile {\r\n  get name(): string {\r\n    return this._underlyingFile.name;\r\n  }\r\n\r\n  get size(): number {\r\n    return this._underlyingFile.size;\r\n  }\r\n\r\n  get type(): string {\r\n    return this._underlyingFile.type;\r\n  }\r\n\r\n  get readMode(): ReadMode {\r\n    return this._readMode;\r\n  }\r\n\r\n  get content(): any {\r\n    return this._content;\r\n  }\r\n\r\n  get underlyingFile(): File {\r\n    return this._underlyingFile;\r\n  }\r\n\r\n  constructor(\r\n    private _underlyingFile: File,\r\n    private _readMode: ReadMode,\r\n    private _content: any\r\n  ) {}\r\n}\r\n","export enum ReadMode {\r\n  arrayBuffer,\r\n  binaryString,\r\n  dataURL,\r\n  text\r\n}\r\n","import { ReadFile } from './read-file';\r\nimport { ReadFileImpl } from './read-file-impl';\r\nimport { ReadMode } from './read-mode.enum';\r\n\r\nexport function coerceBooleanProperty(value: any): boolean {\r\n  return value != null && `${value}` !== 'false';\r\n}\r\n\r\nexport async function readFileAsync(\r\n  file: File,\r\n  readMode: ReadMode\r\n): Promise<ReadFile> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event: ProgressEvent) => {\r\n      const fileReader = event.target as FileReader;\r\n      const readFile = new ReadFileImpl(file, readMode, fileReader.result);\r\n\r\n      resolve(readFile);\r\n    };\r\n\r\n    reader.onerror = (event: ProgressEvent) => {\r\n      reject(event);\r\n    };\r\n\r\n    switch (readMode) {\r\n      case ReadMode.arrayBuffer:\r\n        reader.readAsArrayBuffer(file);\r\n        break;\r\n      case ReadMode.binaryString:\r\n        reader.readAsBinaryString(file);\r\n        break;\r\n      case ReadMode.text:\r\n        reader.readAsText(file);\r\n        break;\r\n      case ReadMode.dataURL:\r\n      default:\r\n        reader.readAsDataURL(file);\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { EventEmitter, Input, Output } from '@angular/core';\r\nimport { readFileAsync } from './helpers';\r\nimport { ReadFile } from './read-file';\r\nimport { ReadMode } from './read-mode.enum';\r\n\r\nexport abstract class FileHandler {\r\n  @Input()\r\n  public readMode: ReadMode;\r\n\r\n  @Input()\r\n  public filter: (\r\n    file: File,\r\n    index: number,\r\n    files: Array<File>\r\n  ) => boolean = () => true;\r\n\r\n  @Output()\r\n  public readStart = new EventEmitter<number>();\r\n\r\n  @Output()\r\n  public readEnd = new EventEmitter<number>();\r\n\r\n  protected async readFiles(\r\n    files: FileList,\r\n    onFileRead: (fileRead: ReadFile) => void\r\n  ): Promise<void> {\r\n    const filteredFiles = Array.from<File>(files).filter(this.filter);\r\n    const fileCount = filteredFiles.length;\r\n\r\n    this.readStart.emit(fileCount);\r\n\r\n    await Promise.all(\r\n      filteredFiles.map(async file => {\r\n        const readFile = await readFileAsync(file, this.readMode);\r\n        onFileRead(readFile);\r\n      })\r\n    );\r\n\r\n    this.readEnd.emit(fileCount);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\nimport { FileHandler } from './file-handler';\r\nimport { ReadFile } from './read-file';\r\n\r\n@Directive({\r\n  selector: '[ngxFileDropzone]',\r\n  exportAs: 'ngxFileDropzone'\r\n})\r\nexport class FileDropzoneDirective extends FileHandler {\r\n  @Output()\r\n  public fileDrop = new EventEmitter<ReadFile>();\r\n\r\n  @HostListener('dragenter', ['$event'])\r\n  public onDragEnter(event: DragEvent) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(event: DragEvent) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(event: DragEvent) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    this.readFiles(event.dataTransfer.files, readFile =>\r\n      this.fileDrop.emit(readFile)\r\n    );\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { FileHandler } from './file-handler';\r\nimport { coerceBooleanProperty } from './helpers';\r\nimport { ReadFile } from './read-file';\r\n\r\n@Directive({\r\n  selector: '[ngxFilePicker]',\r\n  exportAs: 'ngxFilePicker'\r\n})\r\nexport class FilePickerDirective extends FileHandler implements OnInit {\r\n  @Input()\r\n  public accept = '';\r\n\r\n  @Input()\r\n  public get multiple(): boolean {\r\n    return this._multiple;\r\n  }\r\n  public set multiple(value: boolean) {\r\n    this._multiple = coerceBooleanProperty(value);\r\n  }\r\n  private _multiple: boolean;\r\n\r\n  @Output()\r\n  public filePick = new EventEmitter<ReadFile>();\r\n\r\n  private _input: any;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {\r\n    super();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this._input = this.renderer.createElement('input');\r\n    this.renderer.appendChild(this.el.nativeElement, this._input);\r\n\r\n    this.renderer.setAttribute(this._input, 'type', 'file');\r\n    this.renderer.setAttribute(this._input, 'accept', this.accept);\r\n    this.renderer.setStyle(this._input, 'display', 'none');\r\n\r\n    if (this.multiple) {\r\n      this.renderer.setAttribute(this._input, 'multiple', 'multiple');\r\n    }\r\n\r\n    this.renderer.listen(this._input, 'change', (event: Event) =>\r\n      this._onListen(event)\r\n    );\r\n  }\r\n\r\n  public reset() {\r\n    if (!this._input) {\r\n      console.error(\r\n        'It seems that ngOnInit() has not been executed or that the hidden _input element is null. Did you mess with the DOM?'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this._input.value = null;\r\n  }\r\n\r\n  @HostListener('click')\r\n  public browse() {\r\n    if (!this._input) {\r\n      console.error(\r\n        'It seems that ngOnInit() has not been executed or that the hidden _input element is null. Did you mess with the DOM?'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this._input.click();\r\n  }\r\n\r\n  // The callback signature prevent the async/await usage\r\n  private _onListen(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n\r\n    this.readFiles(target.files, readFile => this.filePick.emit(readFile))\r\n      // reset value to trick change event making it changeable every time\r\n      .finally(() => (target.value = ''));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FileDropzoneDirective } from './file-dropzone.directive';\r\nimport { FilePickerDirective } from './file-picker.directive';\r\n\r\n@NgModule({\r\n  declarations: [FileDropzoneDirective, FilePickerDirective],\r\n  imports: [],\r\n  exports: [FileDropzoneDirective, FilePickerDirective]\r\n})\r\nexport class NgxFileHelpersModule {}\r\n","/*\r\n * Public API Surface of ngx-file-helpers\r\n */\r\n\r\nexport * from './lib/file-dropzone.directive';\r\nexport * from './lib/file-picker.directive';\r\nexport * from './lib/ngx-file-helpers.module';\r\nexport * from './lib/read-file';\r\nexport * from './lib/read-mode.enum';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {FileHandler as Éµa} from './lib/file-handler';"],"names":[],"mappings":"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"}